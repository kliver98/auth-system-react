{"version":3,"sources":["components/Home/Home.js","actions/constants.js","config/firebase.js","components/Dependency/DepCreate.js","components/Dependency/DepItem.js","components/Dependency/DepUpdate.js","components/Dependency/DepSearch.js","components/User/UserCreate.js","components/User/UserItem.js","components/User/UserUpdate.js","components/User/UserSearch.js","components/Errors/PageNotFound.js","config/routes.js","components/NavBar/NavBar.js","reducers/user.js","reducers/dependency.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","BASE","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DepCreate","Form1","ProgressBar","variant","now","Form","id","onSubmit","handleSubmit","Group","controlId","Label","Control","placeholder","autoComplete","onClick","onClickUpdateCoordinator","Button","as","controlName","htmlSize","Col","onChange","handleChangeMaxUsers","Check","type","x","setState","active","target","checked","label","state","redirect","to","undefined","getUsers","users","db","collection","get","then","querySnapshot","forEach","doc","u","data","user","fullname","name","last_name","email","rol","push","isNumber","check","i","length","Number","isInteger","parseInt","setTimeout","chargeOptions","event","preventDefault","value","substr","checkFields","location","max_users","isNaN","submit","dependency","add","alert","componentDidMount","firestore","bind","domElement","array","this","select","document","getElementById","options","remove","option","createElement","text","indexC","selectedIndex","coordinator","childNodes","getAttribute","connect","DepItem","props","CardPersonalized","obj","Card","Header","Body","Title","Text","user_id","map","key","changeToUpdate","split","handleDelete","delete","window","href","editing","DepUpdate","defaultValue","defaultChecked","set","selected","DepSearch","getDependencies","dependencies","getUserDependency","u_deps","u_dep","chargeDependencies","innerHTML","user_dependency","find","sort","a","b","ReactDOM","render","unmountComponentAtNode","display","UserCreate","linked","dep","password","valid_until","Date","getTime","putOptions","elId","item","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","htmlFor","readOnly","cursor","size","multiple","docC","sel","t","timestamp","console","log","UserItem","handleUpdate","UserUpdate","UserSearch","chargeUsers","componentUidMount","PageNotFound","exact","path","Logged","Search","data-toggle","Sidebar","Login","useState","showLogin","setShowLogin","aria-label","cursorTitle","NavBar","appname","backgroundColor","data-target","aria-controls","aria-expanded","defaultState","reducer","payload","reload","combineReducers","store","createStore","App","marginTop","rel","integrity","crossOrigin","routes","Boolean","hostname","match","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.93bae4fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return <div className=\"container\">\r\n      <h1>Bienvenido</h1>\r\n      <hr/><br /><br /><br /><br /><br />\r\n      <p>En este página web podra adminsitrar cuentas de usuario que estan en dependencias.</p>\r\n      <p>Actualmente solo puede gestionar dependencias y crear usuarios, pero estamos trabajando para mejorar :)</p>\r\n\r\n      <br />\r\n      <p>En la parte superior derecha encontrara las opciones. Solo debe darle click al simbolo de la flecha.</p>\r\n    </div>;\r\n  }\r\n}\r\n","export const LOGIN = \"Iniciar sesión\";\r\nexport const LOGOUT = \"Cerrar sesión\";\r\nexport const UPDATE_DEPENDENCY = \"Editar dependencia\";\r\nexport const DELETE_DEPENDENCY = \"Eliminar dependencia\";\r\nexport const UPDATE_USER = \"Editar usuario\";\r\nexport const DELETE_USER = \"Eliminar usuario\";\r\nexport const PASSWORD = \"Contraseña\";\r\nexport const USER = \"Correo\";\r\nexport const MESSAGE = \"Mensaje\";\r\nexport const SEARCH = \"Buscar\";\r\nexport const BASE = \"/auth-system-react/\";\r\nexport const SET_USER = \"setUser\";\r\nexport const GET_DEPENDENCIES = \"getDependencies\";\r\nexport const CREATE_DEPENDENCY = \"Crear Dependencia\";\r\n","import * as firebase from 'firebase/app'\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBVdLFVxFB59Ee-oYAar4IM-JB1ETJuBjo\",\r\n    authDomain: \"auth-system-react.firebaseapp.com\",\r\n    databaseURL: \"https://auth-system-react.firebaseio.com\",\r\n    projectId: \"auth-system-react\",\r\n    storageBucket: \"auth-system-react.appspot.com\",\r\n    messagingSenderId: \"346641420723\",\r\n    appId: \"1:346641420723:web:516d4f8678479e181bbbc6\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CREATE_DEPENDENCY } from '../../actions/constants';\r\nimport firebase from '../../config/firebase';\r\nimport { ProgressBar, Form, Col, Button } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass DepCreate extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          users: [],\r\n          db: firebase.firestore(),\r\n          active: false,\r\n          redirect: false,\r\n        };\r\n        this.handleChangeMaxUsers = this.handleChangeMaxUsers.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onClickUpdateCoordinator = this.onClickUpdateCoordinator.bind(this);\r\n    }\r\n\r\n    Form1 = () => {\r\n        return (\r\n            <>\r\n                <h1>Crear Dependencia</h1>\r\n                <ProgressBar className=\"mb-5\" variant=\"info\" now={100} />\r\n                <Form id=\"form\" onSubmit={this.handleSubmit}>\r\n    \r\n                    <Form.Group controlId=\"formGridName\">\r\n                        <Form.Label className=\"h4\">Nombre</Form.Label>\r\n                        <Form.Control placeholder=\"Ej: Logística\" autoComplete=\"off\"/>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formGridLocation\">\r\n                        <Form.Label className=\"h4\">Lugar</Form.Label>\r\n                        <Form.Control placeholder=\"Ej: Cali, Colombia\" autoComplete=\"off\"/>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formGroupSelectCustom\">\r\n                        <Form.Label className=\"h4\" onClick={this.onClickUpdateCoordinator}>Coordinador <Button variant=\"info\"><i className=\"fas fa-sync-alt\"></i></Button></Form.Label>\r\n                        <Form.Control as=\"select\" controlId=\"formSelectUser\" controlName=\"formSelectUser\" htmlSize={5}>\r\n                        <option>Cargando...</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridMaxUser\">\r\n                        <Form.Label>Número máximo de usuarios</Form.Label>\r\n                        <Form.Control onChange={this.handleChangeMaxUsers} placeholder=\"Solo números\" autoComplete=\"off\" />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group id=\"formGridActive\">\r\n                        <Form.Check type=\"checkbox\" onClick={(x) => {this.setState({active: x.target.checked})}} label=\"Activar\" />\r\n                    </Form.Group>\r\n    \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        {CREATE_DEPENDENCY}\r\n                    </Button>\r\n                </Form>\r\n                {this.state.redirect ? <Redirect to='/auth-system-react/'  />:undefined}\r\n            </>\r\n        )\r\n    }\r\n\r\n    getUsers = () => {\r\n        let users = [];\r\n        this.state.db\r\n          .collection(\"users\")\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                let u = doc.data();\r\n                let user = {\r\n                    fullname: u.name+' '+u.last_name,\r\n                    email: u.email,\r\n                    rol: u.rol,\r\n                }\r\n                users.push(user);\r\n            });});\r\n        return users;\r\n    }\r\n\r\n    chargeOptions(domElement) {\r\n        var array = this.state.users;\r\n        var select = document.getElementById(domElement);\r\n        while (select.options.length>0) {\r\n            select.remove(0);\r\n        }\r\n\r\n        for (let value in array) {\r\n            var option = document.createElement(\"option\");\r\n            option.id = array[value].email\r\n            option.text = array[value].fullname;\r\n            select.add(option);\r\n        }\r\n    }\r\n\r\n    isNumber = (check) => {\r\n        for (var i=0; i<check.length; i++) {\r\n            var x = check[i];\r\n            if (Number.isInteger(parseInt(x))=== false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onClickUpdateCoordinator = () => {\r\n        this.state.users = this.getUsers();\r\n        setTimeout(() => this.chargeOptions(\"formGroupSelectCustom\"),600);\r\n    }\r\n\r\n    handleChangeMaxUsers = (event) => {\r\n        event.preventDefault();\r\n        let numbers = this.isNumber(event.target.value);\r\n        if (numbers === false) {\r\n            event.target.value = event.target.value.substr(0, event.target.value.length-1);\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let docC = document.getElementById(\"formGroupSelectCustom\");\r\n        let indexC = docC.selectedIndex;\r\n        let dependency = {\r\n            active: this.state.active,\r\n            coordinator: indexC!==-1 ? document.getElementById(\"formGroupSelectCustom\").childNodes[indexC].getAttribute('id'):\"\",\r\n            location: document.getElementById(\"formGridLocation\").value,\r\n            max_users: parseInt(document.getElementById(\"formGridMaxUser\").value),\r\n            name: document.getElementById(\"formGridName\").value,\r\n        };\r\n        if (!this.checkFields(dependency.name, dependency.location,dependency.max_users)) {\r\n            alert('Todos los campos se deben llenar, excepto Coordinador que lo puede dejar vacío.');\r\n        } else {\r\n            this.submit(dependency);\r\n        }\r\n    }\r\n\r\n    checkFields = (name, location, max_users) => {\r\n        if (name===\"\" || location===\"\" || isNaN(max_users) ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submit = (dependency) => {\r\n        this.state.db.collection(\"dependencies\").add(dependency);\r\n        alert('Creado Exitosamente');\r\n        this.setState({\r\n            redirect: true,\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        setTimeout(() => this.chargeOptions(\"formGroupSelectCustom\"),800);\r\n    };\r\n\r\n    render() {\r\n        this.state.users = this.getUsers();\r\n        return(\r\n            <div className=\"container\">\r\n                <this.Form1/>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      user: state.user,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(DepCreate);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\nimport { BASE, UPDATE_DEPENDENCY, DELETE_DEPENDENCY } from '../../actions/constants';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport firebase from '../../config/firebase';\r\n\r\nexport default class DepItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          editing: false,\r\n          db: firebase.firestore(),\r\n          obj: props.dependency,\r\n        };\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    CardPersonalized = () => {\r\n        let obj = this.state.obj;\r\n        return (\r\n            <div id=\"cardDepItem\">\r\n                <Card className=\"text-left mb-4\">\r\n                <Router>\r\n                    <Card.Header as=\"h5\" id=\"title\">{obj.name}</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Coordinador: <Link className=\"active\" to={BASE+\"user/\"+obj.coordinator}>{obj.coordinator}</Link></Card.Title>\r\n                        <Card.Text>\r\n                            Ubicación: {obj.location}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            Número máximo de usuarios: {obj.max_users}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            Usuarios ({obj.users ? obj.users.user_id.length:0})\r\n                        </Card.Text>\r\n                        {   obj.users ? \r\n                                <ul>\r\n                                    {\r\n                                        obj.users ? obj.users.user_id.map(x =>\r\n                                        <li key={x}><Link className=\"active\" to={BASE+\"user/\"+x}>{x}</Link></li>):\"\"\r\n                                    }\r\n                                </ul>:\"\"\r\n                            }\r\n                        <Card.Text>\r\n                            Activo : {obj.active ? \"Sí\":\"No\"}\r\n                        </Card.Text>\r\n                        <Button variant=\"secondary\" onClick={() => this.props.changeToUpdate(obj)} className=\"mr-2 mb-1\"><i className=\"far fa-edit\"></i> {UPDATE_DEPENDENCY.split(' ')[0]}</Button>\r\n                        <Button variant=\"danger\" className=\"mb-1\" onClick={this.handleDelete}><i className=\"fas fa-trash\"></i> {DELETE_DEPENDENCY.split(' ')[0]}</Button>\r\n                    </Card.Body>\r\n                    </Router>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleDelete = () => {\r\n        let obj = this.state.obj;\r\n        if (!obj.users || obj.users.user_id.length===0) {\r\n            this.state.db.collection(\"dependencies\").doc(obj.id).delete().then(() => window.location.href = \"./all\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n    \r\n        return(\r\n            <div>\r\n                <this.CardPersonalized/>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport firebase from '../../config/firebase';\r\nimport { ProgressBar, Form, Col, Button } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass DepUpdate extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          db: firebase.firestore(),\r\n          users: [],\r\n          dependency: {},\r\n          active: false,\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    Form1 = () => {\r\n        let dependency = this.props.dependency;\r\n        this.state.dependency = dependency;\r\n        return (\r\n            <>\r\n                <Form id=\"form\" onSubmit={this.handleSubmit}>\r\n    \r\n                    <Form.Group controlId=\"formGridName\">\r\n                        <Form.Label className=\"h4\">Nombre</Form.Label>\r\n                        <Form.Control placeholder=\"Ej: Logística\" autoComplete=\"off\" defaultValue={dependency.name}/>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formGridLocation\">\r\n                        <Form.Label className=\"h4\">Lugar</Form.Label>\r\n                        <Form.Control placeholder=\"Ej: Cali, Colombia\" autoComplete=\"off\" defaultValue={dependency.location}/>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formGroupSelectCustom\">\r\n                        <Form.Label className=\"h4\" onClick={this.onClickUpdateCoordinator}>Coordinador <Button variant=\"info\"><i className=\"fas fa-sync-alt\"></i></Button></Form.Label>\r\n                        <Form.Control as=\"select\" controlId=\"formSelectUser\" controlName=\"formSelectUser\" htmlSize={5}>\r\n                        <option>Cargando...</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridMaxUser\">\r\n                        <Form.Label>Número máximo de usuarios</Form.Label>\r\n                        <Form.Control onChange={this.handleChangeMaxUsers} placeholder=\"Solo números\" autoComplete=\"off\" defaultValue={dependency.max_users} />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group id=\"formGridActive\">\r\n                        <Form.Check type=\"checkbox\" onClick={(x) => {this.setState({active: x.target.checked})}} defaultChecked={dependency.active} label=\"Activar\" />\r\n                    </Form.Group>\r\n    \r\n                    <Button variant=\"warning\" type=\"submit\" className=\"mr-2\">\r\n                        Editar\r\n                    </Button>\r\n                    <Button variant=\"info\" onClick={x => window.location.href = \"./all\"}>\r\n                        Cancelar\r\n                    </Button>\r\n                </Form>\r\n                {this.state.redirect ? <Redirect to='/auth-system-react/'  />:undefined}\r\n            </>\r\n        )\r\n    }\r\n\r\n    isNumber = (check) => {\r\n        for (var i=0; i<check.length; i++) {\r\n            var x = check[i];\r\n            if (Number.isInteger(parseInt(x))=== false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onClickUpdateCoordinator = () => {\r\n        this.state.users = this.getUsers();\r\n        setTimeout(() => this.chargeOptions(\"formGroupSelectCustom\"),600);\r\n    }\r\n\r\n    handleChangeMaxUsers = (event) => {\r\n        event.preventDefault();\r\n        let numbers = this.isNumber(event.target.value);\r\n        if (numbers === false) {\r\n            event.target.value = event.target.value.substr(0, event.target.value.length-1);\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let docC = document.getElementById(\"formGroupSelectCustom\");\r\n        let indexC = docC.selectedIndex;\r\n        let dependency = {\r\n            active: this.state.active,\r\n            coordinator: indexC!==-1 ? document.getElementById(\"formGroupSelectCustom\").childNodes[indexC].getAttribute('id'):\"\",\r\n            location: document.getElementById(\"formGridLocation\").value,\r\n            max_users: parseInt(document.getElementById(\"formGridMaxUser\").value),\r\n            name: document.getElementById(\"formGridName\").value,\r\n        };\r\n        if (!this.checkFields(dependency.name, dependency.location,dependency.max_users)) {\r\n            alert('Todos los campos se deben llenar, excepto Coordinador que lo puede dejar vacío.');\r\n        } else {\r\n            this.submit(dependency);\r\n        }\r\n    }\r\n\r\n    checkFields = (name, location, max_users) => {\r\n        if (name===\"\" || location===\"\" || isNaN(max_users) ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submit = (dependency) => {\r\n        this.state.db.collection('dependencies').doc(this.state.dependency.id).set(dependency).then(() => window.location.href = \"./all\");\r\n    }\r\n\r\n    chargeOptions(domElement) {\r\n        var array = this.state.users;\r\n        var select = document.getElementById(domElement);\r\n        while (select.options.length>0) {\r\n            select.remove(0);\r\n        }\r\n\r\n        for (let value in array) {\r\n            var option = document.createElement(\"option\");\r\n            option.id = array[value].email\r\n            option.text = array[value].fullname;\r\n            if (this.state.dependency.coordinator===array[value].email) {\r\n                option.selected = true;\r\n            }\r\n            select.add(option);\r\n        }\r\n    }\r\n\r\n    getUsers = () => {\r\n        let users = [];\r\n        this.state.db.collection(\"users\").get().then(\r\n            (querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    let u = doc.data();\r\n                    let user = {\r\n                        fullname: u.name+' '+u.last_name,\r\n                        email: u.email,\r\n                        rol: u.rol,\r\n                    }\r\n                users.push(user);\r\n                });}\r\n        );\r\n        return users;\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.chargeOptions(\"formGroupSelectCustom\"),600);\r\n    }\r\n\r\n    render() {\r\n        this.state.users = this.getUsers();\r\n        return(\r\n            <div className=\"container\">\r\n                <this.Form1/>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default DepUpdate;\r\n","import React, { Component } from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport firebase from '../../config/firebase';\r\nimport DepItem from './DepItem';\r\nimport DepUpdate from './DepUpdate';\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport default class DepSearch extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          dependencies: [],\r\n          user_dependency: [],\r\n          db: firebase.firestore(),\r\n        };\r\n    }\r\n\r\n    getDependencies = () => {\r\n        let dependencies = [];\r\n        this.state.db\r\n          .collection(\"dependencies\")\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                let u = doc.data();\r\n                let dependency = {\r\n                    id: doc.id,\r\n                    active: u.active,\r\n                    coordinator: u.coordinator,\r\n                    location: u.location,\r\n                    max_users: u.max_users,\r\n                    name: u.name,\r\n                    users: [],\r\n                }\r\n                dependencies.push(dependency);\r\n            });});\r\n        return dependencies;\r\n    }\r\n\r\n    getUserDependency = () => {\r\n        let u_deps = [];\r\n        this.state.db\r\n          .collection(\"user_dependency\")\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                let u = doc.data();\r\n                let u_dep = {\r\n                    id: doc.id,\r\n                    user_id: u.user_id,\r\n                }\r\n                u_deps.push(u_dep);\r\n            });});\r\n        return u_deps;\r\n    }\r\n\r\n    chargeDependencies = (domElement) => {\r\n        document.getElementById(domElement).innerHTML = '';\r\n        var array = this.state.dependencies;\r\n        for (var i=0; i < array.length; i++) {\r\n            array[i].users = this.state.user_dependency.find(x => x.id===array[i].id);\r\n        }\r\n        array = array.sort(\r\n            function (a,b) {\r\n                if (a.name>b.name) {\r\n                    return 1\r\n                };\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }\r\n        );\r\n        array = array.map(dependency => (\r\n            <DepItem dependency={dependency} key={dependency.id} changeToUpdate={this.changeToUpdate}/>\r\n        ));\r\n        ReactDOM.render(array,document.getElementById(domElement));\r\n    }\r\n\r\n    changeToUpdate = (dependency) => {\r\n        let doc = document.getElementById(\"founds\");\r\n        doc.unmountComponentAtNode  = true;\r\n        ReactDOM.render(<DepUpdate dependency={dependency}/>,doc);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        setTimeout(() => this.chargeDependencies(\"founds\"),800);\r\n    };\r\n\r\n    render() {\r\n        this.state.user_dependency = this.getUserDependency();\r\n        this.state.dependencies = this.getDependencies();\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Gestionar Dependencias</h1>\r\n                <ProgressBar className=\"mb-5\" variant=\"info\" now={100} />\r\n                <div id=\"founds\"></div>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BASE, GET_DEPENDENCIES } from '../../actions/constants';\r\nimport firebase from '../../config/firebase';\r\n\r\nlet display = {\r\n    display: 'none',\r\n}\r\n\r\nclass UserCreate extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            db: firebase.firestore(),\r\n        };\r\n    }\r\n\r\n    linked = (dependencies,user_dependency) => {\r\n        let array = [];\r\n        for (let i = 0; i<dependencies.length; i++) {\r\n            let dep = dependencies[i];\r\n            let a = user_dependency.find(i => i.id===dep.id);\r\n            dep.users = a ? a.user_id:[];\r\n            array.push(dep);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    chargeOptions(domElement, array) {\r\n        var select = document.getElementById(domElement);\r\n        while (select.options.length>0) {\r\n            select.remove(0);\r\n        }\r\n        for (let value in array) {\r\n            var option = document.createElement(\"option\");\r\n            let item = array[value];\r\n            if (item.users.length>=item.max_users) {\r\n                continue;\r\n            }\r\n            option.id = item.id\r\n            option.text = item.name+\" | ocupación: \"+item.users.length+\"/\"+item.max_users;\r\n            select.add(option);\r\n        }\r\n    }\r\n\r\n    Form1() {\r\n        let t = [];\r\n        return (\r\n            <div className=\"col-12\">\r\n                <form className=\"form-horizontal\" onSubmit={(event) => this.handleSubmit(event)}>\r\n                    <fieldset>\r\n                        <div id=\"legend\">\r\n                        <legend className=\"\">Registrarse</legend>\r\n                        <span id=\"error\"></span>\r\n                        </div>\r\n                        <div className=\"progress mb-2\">\r\n                            <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: '100%'}} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                    \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"email\">E-mail</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"example@correo.com\" autoComplete=\"off\" className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n                    \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"password\">Contraseña</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"\" autoComplete=\"off\" className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"username\">Nombre</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"\" autoComplete=\"off\" className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"last_name\">Apellido</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"last_name\" name=\"last_name\" placeholder=\"\" autoComplete=\"off\" className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"valid_until\">Cuenta válida hasta</label>\r\n                        <div className=\"controls\">\r\n                        <input type=\"datetime-local\" id=\"valid_until\" name=\"valid_until\" className=\"col-10\"></input>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" style={display} htmlFor=\"active\">¿Cuenta activa?</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"active\" name=\"active\" readOnly value=\"1\" autoComplete=\"off\" style={display} className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" style={display} htmlFor=\"rol\">Rol</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"rol\" name=\"rol\" readOnly value=\"3OkqwOsjKkjAbSgF5UXW\" autoComplete=\"off\" style={display} className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n                    \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"dependenciesSelect\">Seleccione Dependencia(s) \r\n                            <span className=\"text-danger\" style={{cursor: 'pointer',}} onClick={() => this.putOptions()}> <i className=\"fas fa-sync-alt\"></i></span></label>\r\n                            <select className=\"col-10\" id=\"dependenciesSelect\" name=\"dependenciesSelect\" size='5' multiple>\r\n                                \r\n                            </select>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group mt-4\">\r\n                        <div className=\"controls\">\r\n                            <button type=\"submit\" className=\"btn btn-success\">Registrarse</button>\r\n                        </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let docC = document.getElementById(\"dependenciesSelect\");\r\n        let sel = [];\r\n        for (var i =0; i < docC.options.length; i++) {\r\n            if ( docC.options[i].selected ) {\r\n                sel.push(docC.options[i].id);\r\n            }\r\n        }\r\n        let t = document.getElementById(\"valid_until\").value;\r\n        var date = new Date(t ? t:1603844363);\r\n        var timestamp = date.getTime();\r\n        let user = {\r\n            active: true,\r\n            dependencies: sel,\r\n            email: document.getElementById(\"email\").value,\r\n            name: document.getElementById(\"username\").value,\r\n            last_name: document.getElementById(\"last_name\").value,\r\n            password: document.getElementById(\"username\").value,\r\n            rol: \"3OkqwOsjKkjAbSgF5UXW\",\r\n            valid_until: timestamp,\r\n        };\r\n        console.log(user);\r\n        if ( !this.checkFields(user) ) {\r\n            document.getElementById(\"error\").innerHTML = \"<span style='color:red;'>Error, verifique los campos</span>\";\r\n        } else {\r\n            this.submit(user);\r\n        }\r\n    }\r\n\r\n    checkFields = (user) => {\r\n        if ( user.dependencies.length<1 || user.email==='' || user.name==='' || user.last_name==='' || user.password.length<4 || user.valid_until<=(new Date()).getTime()  ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submit = (user) => {\r\n        this.state.db.collection(\"users\").doc(user.email).set(user).then(() => window.location.href = \"../\");\r\n    }\r\n\r\n    getDependencies = () => {\r\n        let dependencies = [];\r\n        this.state.db\r\n        .collection(\"dependencies\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                let u = doc.data();\r\n                let dep = {\r\n                    id: doc.id,\r\n                    name: u.name,\r\n                    coordinator: u.coordinator,\r\n                    max_users: u.max_users,\r\n                    users: [],\r\n                }\r\n                dependencies.push(dep);\r\n            });});\r\n        return dependencies;\r\n    }\r\n\r\n    getUserDependency = () => {\r\n        let u_deps = [];\r\n        this.state.db\r\n          .collection(\"user_dependency\")\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                let u = doc.data();\r\n                let u_dep = {\r\n                    id: doc.id,\r\n                    user_id: u.user_id,\r\n                }\r\n                u_deps.push(u_dep);\r\n            });});\r\n        return u_deps;\r\n    }\r\n\r\n    putOptions = (elId = \"dependenciesSelect\") => {\r\n        let array = [];\r\n        let dependencies = this.getDependencies();\r\n        let user_dependency = this.getUserDependency();\r\n        setTimeout(() => { array = this.linked(dependencies,user_dependency) },700);\r\n        setTimeout(() => this.chargeOptions(elId,array),1000);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.putOptions();\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                {this.Form1()}\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      user: state.user,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserCreate);","import React, { Component, useState } from 'react';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport firebase from '../../config/firebase';\r\nimport { BASE } from '../../actions/constants';\r\n\r\nexport default class UserItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false,\r\n            db: firebase.firestore(),\r\n            user: props.user,\r\n        };\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n    }\r\n\r\n    CardPersonalized = () => {\r\n        let user = this.state.user;\r\n        return (\r\n            <div id=\"cardUserItem\">\r\n                <Card className=\"text-left mb-4\">\r\n                    <Router>\r\n                        <Card.Header as=\"h5\" id=\"title\"><Link className=\"active\" to={BASE+\"user/\"+user.name}>{user.name}</Link></Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>Usuario: </Card.Title>\r\n                            <Button variant=\"secondary\" className=\"mr-2\"><i className=\"far fa-edit\"></i> Editar</Button>\r\n                            <Button variant=\"danger\" onClick={this.handleDelete}><i className=\"fas fa-trash\"></i> Eliminar</Button>\r\n                        </Card.Body>\r\n                    </Router>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleDelete = () => {\r\n        let user = this.state.user;\r\n        if (!user.users || user.users.user_id.length === 0)\r\n            this.state.db.collection(\"users\").doc(user.id).delete();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <this.CardPersonalized />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport firebase from '../../config/firebase';\r\nimport { ProgressBar, Form, Col, Button } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass UserUpdate extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          db: firebase.firestore(),\r\n          users: [],\r\n          dependency: {},\r\n          active: false,\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    Form1 = () => {\r\n        let dependency = this.props.dependency;\r\n        this.state.dependency = dependency;\r\n        return (\r\n            <>\r\n                <Form id=\"form\" onSubmit={this.handleSubmit}>\r\n    \r\n                    <Form.Group controlId=\"formGridName\">\r\n                        <Form.Label className=\"h4\">Nombre</Form.Label>\r\n                        <Form.Control placeholder=\"Ej: Logística\" autoComplete=\"off\" defaultValue={dependency.name}/>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formGridLocation\">\r\n                        <Form.Label className=\"h4\">Lugar</Form.Label>\r\n                        <Form.Control placeholder=\"Ej: Cali, Colombia\" autoComplete=\"off\" defaultValue={dependency.location}/>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formGroupSelectCustom\">\r\n                        <Form.Label className=\"h4\" onClick={this.onClickUpdateCoordinator}>Coordinador <Button variant=\"info\"><i className=\"fas fa-sync-alt\"></i></Button></Form.Label>\r\n                        <Form.Control as=\"select\" controlId=\"formSelectUser\" controlName=\"formSelectUser\" htmlSize={5}>\r\n                        <option>Cargando...</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridMaxUser\">\r\n                        <Form.Label>Número máximo de usuarios</Form.Label>\r\n                        <Form.Control onChange={this.handleChangeMaxUsers} placeholder=\"Solo números\" autoComplete=\"off\" defaultValue={dependency.max_users} />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group id=\"formGridActive\">\r\n                        <Form.Check type=\"checkbox\" onClick={(x) => {this.setState({active: x.target.checked})}} defaultChecked={dependency.active} label=\"Activar\" />\r\n                    </Form.Group>\r\n    \r\n                    <Button variant=\"warning\" type=\"submit\" className=\"mr-2\">\r\n                        Editar\r\n                    </Button>\r\n                    <Button variant=\"info\" onClick={x => window.location.href = \"./all\"}>\r\n                        Cancelar\r\n                    </Button>\r\n                </Form>\r\n                {this.state.redirect ? <Redirect to='/auth-system-react/'  />:undefined}\r\n            </>\r\n        )\r\n    }\r\n\r\n    isNumber = (check) => {\r\n        for (var i=0; i<check.length; i++) {\r\n            var x = check[i];\r\n            if (Number.isInteger(parseInt(x))=== false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onClickUpdateCoordinator = () => {\r\n        this.state.users = this.getUsers();\r\n        setTimeout(() => this.chargeOptions(\"formGroupSelectCustom\"),600);\r\n    }\r\n\r\n    handleChangeMaxUsers = (event) => {\r\n        event.preventDefault();\r\n        let numbers = this.isNumber(event.target.value);\r\n        if (numbers === false) {\r\n            event.target.value = event.target.value.substr(0, event.target.value.length-1);\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let docC = document.getElementById(\"formGroupSelectCustom\");\r\n        let indexC = docC.selectedIndex;\r\n        let dependency = {\r\n            active: this.state.active,\r\n            coordinator: indexC!==-1 ? document.getElementById(\"formGroupSelectCustom\").childNodes[indexC].getAttribute('id'):\"\",\r\n            location: document.getElementById(\"formGridLocation\").value,\r\n            max_users: parseInt(document.getElementById(\"formGridMaxUser\").value),\r\n            name: document.getElementById(\"formGridName\").value,\r\n        };\r\n        if (!this.checkFields(dependency.name, dependency.location,dependency.max_users)) {\r\n            alert('Todos los campos se deben llenar, excepto Coordinador que lo puede dejar vacío.');\r\n        } else {\r\n            this.submit(dependency);\r\n        }\r\n    }\r\n\r\n    checkFields = (name, location, max_users) => {\r\n        if (name===\"\" || location===\"\" || isNaN(max_users) ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submit = (dependency) => {\r\n        this.state.db.collection('dependencies').doc(this.state.dependency.id).set(dependency).then(() => window.location.href = \"./all\");\r\n    }\r\n\r\n    chargeOptions(domElement) {\r\n        var array = this.state.users;\r\n        var select = document.getElementById(domElement);\r\n        while (select.options.length>0) {\r\n            select.remove(0);\r\n        }\r\n\r\n        for (let value in array) {\r\n            var option = document.createElement(\"option\");\r\n            option.id = array[value].email\r\n            option.text = array[value].fullname;\r\n            if (this.state.dependency.coordinator===array[value].email) {\r\n                option.selected = true;\r\n            }\r\n            select.add(option);\r\n        }\r\n    }\r\n\r\n    getUsers = () => {\r\n        let users = [];\r\n        this.state.db.collection(\"users\").get().then(\r\n            (querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    let u = doc.data();\r\n                    let user = {\r\n                        fullname: u.name+' '+u.last_name,\r\n                        email: u.email,\r\n                        rol: u.rol,\r\n                    }\r\n                users.push(user);\r\n                });}\r\n        );\r\n        return users;\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.chargeOptions(\"formGroupSelectCustom\"),600);\r\n    }\r\n\r\n    render() {\r\n        this.state.users = this.getUsers();\r\n        return(\r\n            <div className=\"container\">\r\n                <this.Form1/>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default UserUpdate;\r\n","import React, { Component } from 'react';\r\nimport { ProgressBar, Button, Card } from 'react-bootstrap';\r\nimport firebase from '../../config/firebase';\r\nimport UserItem from './UserItem';\r\nimport ReactDOM from 'react-dom';\r\nimport UserUpdate from './UserUpdate';\r\n\r\nexport default class UserSearch extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        users: [],\r\n        user_dependency: [],\r\n        db: firebase.firestore(),\r\n        };\r\n    }\r\n\r\n    getUsers = () => {\r\n        let users = [];\r\n        this.state.db\r\n        .collection(\"users\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                let u = doc.data();\r\n                let user = {\r\n                    id: doc.id,\r\n                    email: u.email,\r\n                    last_name: u.last_name,\r\n                    name: u.name,\r\n                }\r\n                users.push(user);\r\n            });\r\n        });\r\n        return users;\r\n    }\r\n\r\n    getUserDependency = () => {\r\n        let u_deps = [];\r\n        this.state.db\r\n          .collection(\"user_dependency\")\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                let u = doc.data();\r\n                let u_dep = {\r\n                    id: doc.id,\r\n                    user_id: u.user_id,\r\n                }\r\n                u_deps.push(u_dep);\r\n            });});\r\n        return u_deps;\r\n    }\r\n\r\n    chargeUsers = (domElement) => {\r\n        document.getElementById(domElement).innerHTML = '';\r\n        var array = this.state.users;\r\n        for (var i = 0; i < array.length; i++) {\r\n            const element = array[i];\r\n            \r\n        }\r\n        array = array.sort(\r\n            function (a,b) {\r\n                if (a.name>b.name) {\r\n                    return 1\r\n                };\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }\r\n        );\r\n        array = array.map(user => (\r\n            <UserItem user={user} key={user.id}/>\r\n        ));\r\n        ReactDOM.render(array,document.getElementById(domElement));\r\n    }\r\n\r\n    changeToUpdate = (user) => {\r\n        let doc = document.getElementById(\"founds\");\r\n        doc.unmountComponentAtNode  = true;\r\n        ReactDOM.render(<UserUpdate user={user}/>,doc);\r\n    }\r\n\r\n    componentUidMount = () => {\r\n        setTimeout(() => this.chargeUsers(\"founds\"),800);\r\n    };\r\n\r\n    render() {\r\n        this.state.users = this.getUsers();\r\n        this.state.user_dependency = this.getUserDependency();\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Gestionar Usuarios</h1>\r\n                <ProgressBar className=\"mb-5\" variant=\"info\" now={100} />\r\n                <div id=\"founds\"></div>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class PageNotFound extends Component {\r\n  render() {\r\n    console.log(\"Hola2\");\r\n    return <div>Error 404 Not Found Page.</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Home from \"../components/Home/Home\";\r\nimport DepCreate from \"../components/Dependency/DepCreate\";\r\nimport DepSearch from \"../components/Dependency/DepSearch\";\r\nimport UserCreate from \"../components/User/UserCreate\";\r\nimport UserSearch from \"../components/User/UserSearch\";\r\nimport PageNotFound from \"../components/Errors/PageNotFound\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { BASE } from '../actions/constants';\r\n\r\nexport default (\r\n    <>\r\n      <Switch>\r\n        <Route exact path={BASE}>\r\n          <Home />\r\n        </Route>\r\n        <Route exact path={BASE+\"dependency/create\"}>\r\n          <DepCreate />\r\n        </Route>\r\n        <Route exact path={BASE+\"dependency/search/all\"}>\r\n          <DepSearch />\r\n        </Route>\r\n        <Route exact path={BASE+\"user/create\"}>\r\n          <UserCreate />\r\n        </Route>\r\n        <Route exact path={BASE+\"user/search/all\"}>\r\n          <UserSearch />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <PageNotFound />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n  ","import React, { Component, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { SEARCH, LOGIN, BASE, PASSWORD, USER } from '../../actions/constants';\r\n\r\nlet user = {};\r\n\r\nconst Logged = () => (\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <Search />\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li className=\"nav-item dropdown\">\r\n        <span className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\">{user.fullname}</span>\r\n        <div className=\"dropdown-menu\">\r\n          <Sidebar/>\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to={BASE+\"logout\"}>\r\n          <i className=\"fas fa-sign-out-alt\"></i>\r\n          </Link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nfunction Login() {\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  return (\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <Search />\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item active\">\r\n        {\r\n          showLogin ? \r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n            <input type=\"text\" className=\"form-control  mr-sm-2\" id={USER} placeholder={USER} />\r\n            <input type=\"password\" className=\"form-control  mr-sm-2\" id={PASSWORD} placeholder={PASSWORD} />\r\n            <button type=\"submit\" className=\"btn btn-primary my-2 my-sm-0\">{LOGIN}</button>\r\n          </form>\r\n          :\r\n          <span onClick={() => setShowLogin(true)} className=\"nav-link\" style={{cursor:\"pointer\"}}>Iniciar sesión</span>\r\n        }\r\n\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Search() {\r\n  return (\r\n  <>\r\n    <form className=\"form-inline my-2 my-lg-0\">\r\n      <input className=\"form-control mr-sm-2\" type=\"search\" placeholder={SEARCH} aria-label={SEARCH} />\r\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">{SEARCH}</button>\r\n    </form>\r\n  </>\r\n  )\r\n}\r\n\r\nfunction Sidebar() {\r\n  let cursorTitle = {\r\n    cursor: 'default',\r\n  }\r\n  return (\r\n    <>\r\n      <ul className=\"list-group list-group-flush\">\r\n        <li className=\"list-group-item\">\r\n          <span className=\"nav-link font-weight-bold h5\" style={cursorTitle}>Mi perfil</span>\r\n          <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to={BASE+\"user/modify/\"+user.email}>Ver</Link>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <span className=\"nav-link font-weight-bold h5\" style={cursorTitle}>Dependencias</span>\r\n          <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to={BASE+\"dependency/create\"}>Crear</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to={BASE+\"dependency/search/all\"}>Buscar - Editar / Eliminar</Link>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <span className=\"nav-link font-weight-bold h5\" style={cursorTitle}>Usuarios</span>\r\n          <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to={BASE+\"user/create\"}>Crear</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to={BASE+\"user/search/all\"}>Buscar - Editar / Eliminar</Link>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    const { appname } = this.props;\r\n    const navStyle = {\r\n      backgroundColor: 'silver',\r\n    }\r\n    user = this.props.user;\r\n    return (\r\n      <div>\r\n      \r\n        <nav\r\n          className=\"navbar navbar-expand-md navbar-light fixed-top\"\r\n          style={navStyle}\r\n        >\r\n          <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to={BASE}>\r\n              <i className=\"fas fa-user-shield\"></i>\r\n              {' '+appname}\r\n            </Link>\r\n            <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#navbarNav\"\r\n                  aria-controls=\"navbarNav\"\r\n                  aria-expanded=\"false\"\r\n                  aria-label=\"Toggle navigation\"\r\n                >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            { user.email==='' ?  <Login /> : <Logged/> }\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import { SET_USER } from '../actions/constants';\r\nimport firebase from '../config/firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nlet defaultState = {\r\n    fullname: '',\r\n    email: '',\r\n    rol: '',\r\n}\r\n\r\ndb.collection(\"users\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n    querySnapshot.forEach((doc) => {\r\n        defaultState.fullname = doc.data().name+\" \"+doc.data().last_name;\r\n        defaultState.email = doc.data().email;\r\n        defaultState.rol = doc.data().rol;\r\n    });\r\n    });\r\n\r\nfunction reducer(state = defaultState, { type, payload}) {\r\n    switch (type) {\r\n        case SET_USER:\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { GET_DEPENDENCIES } from '../actions/constants';\r\nimport firebase from '../config/firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nlet defaultState = {\r\n    dependencies: []\r\n}\r\n\r\nconst reload = () => {\r\n    defaultState.dependencies = []\r\n    db.collection(\"dependencies\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n    querySnapshot.forEach((doc) => {\r\n        defaultState.dependencies.push({id: doc.id, name: doc.data().name});\r\n    });\r\n    });\r\n}\r\n\r\nreload();\r\n\r\nfunction reducer(state = defaultState, { type, payload}) {\r\n    switch (type) {\r\n        case GET_DEPENDENCIES:\r\n            reload();\r\n            return defaultState.dependencies;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore, combineReducers  } from 'redux';\r\nimport user from '../reducers/user';\r\nimport dependencies from '../reducers/dependency';\r\n\r\nconst reducer = combineReducers({\r\n  user,\r\n  dependencies\r\n});\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport routes from './config/routes';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport firebase from './config/firebase';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      appname: '',\r\n      user: {\r\n        id: '',\r\n        fullname: '',\r\n        email:'',\r\n      },\r\n      db: firebase.firestore(),\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let appname = '';\r\n    this.state.db\r\n      .collection(\"app\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          appname = doc.data().name;\r\n          this.setState({\r\n            appname,\r\n          });\r\n        });});\r\n  };\r\n\r\n  render() {\r\n    const { appname, user } = this.state;\r\n    const appStyle = {\r\n      marginTop: '6em',\r\n    }\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <NavBar appname={appname} user={user} />\r\n          <div className=\"App\" style={appStyle}>\r\n            <link \r\n              rel=\"stylesheet\" \r\n              href=\"https://pro.fontawesome.com/releases/v5.10.0/css/all.css\" \r\n              integrity=\"sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p\" \r\n              crossOrigin=\"anonymous\"\r\n            />\r\n            <link\r\n              rel=\"stylesheet\"\r\n              href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n            />\r\n            {routes}\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}